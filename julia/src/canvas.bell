mod {
    use math;
    use std.game.Pos;
    use std.game.blocks.PlaceBlock;
    use std.game.blocks.Block;

    pub def Canvas = struct {
        initial: (Int32, Int32);
        end: (Int32, Int32);
        height: Int32;
        
        color: (Fixed, Fixed) -> Block;

        pub def draw: () -> () \ PlaceBlock = () => {
            def interpolate = (value, start, end) => math.interpolate mod {
                def t = Fixed.new (value - start, 0) / Fixed.new (end - start, 0);
                def initial = Fixed.new(-2, 0);
                def end = Fixed.new(2, 0);
            };

            for x in initial.0..end.0 {
                for z in initial.1..end.1 {
                    break {
                        block: color (
                            interpolate (x, initial.0, end.0),
                            interpolate (z, initial.1, end.1),
                        ),
                        pos: Pos.new (x, height, z)
                    };
                }
            }
        };
    };
}
